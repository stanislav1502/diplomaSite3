
@using Microsoft.AspNetCore.Identity;
@inject SignInManager<UserModel> SignInManager

@model AdminThesisVM

@inject UserManager<UserModel> UserManager

@{
    ViewData["Title"] = Localizer["title"];
    var isGuest = User.Claims.ToList().Any() ? false : true;
}

<h1>@Localizer["title"]</h1>

<form asp-controller="Thesis" asp-action="Index" method="get">
    <div class="float-start m-1">
        <label for="searchTextbox"> @Localizer["thesisNameTxt"]: </label>
        <input type="text" id="searchTextbox" asp-for="Search" />
    </div>
    <div class="float-start m-1">
        
        @if (isGuest)
        {
            <input type="hidden" id="postedCheckbox" asp-for="OnlyPosted" value="true" />
        }else
        {
            <label for="postedCheckbox">@Localizer["onlyPostedTxt"]: </label>
            <input type="checkbox" id="postedCheckbox" asp-for="OnlyPosted" />
        }
    </div>

    <div class="float-end">
        <input class="btn btnreq" type="submit" value="@Localizer["filterBtn"]" />
    </div>
</form>

<p>
    @if (User.IsInRole("Admin"))
    {
        <a class="btn thesisbtn" asp-controller="Thesis" asp-action="Create">@Localizer["createBtn"]</a>
    }
</p>


<table class="table" id="indexThesisTable">
    
    <thead>
        <tr>
            <th onclick="sortTable(0)">
                @Localizer["thesisNameTxt"]
            </th>
           
            <th onclick="sortTable(1)">
                @Localizer["thesisDefenseTxt"]
            </th>
            <th onclick="sortTable(2)">
                @Localizer["thesisGradeTxt"]
            </th>
           
            <th onclick="sortTable(3)"  >
                @Localizer["thesisStatusTxt"]
            </th>
            <th onclick="sortTable(4)">
                @Localizer["thesisTeacherTxt"]
            </th>
            <th onclick="sortTable(5)">
                @Localizer["thesisStudentTxt"]
            </th>
            <th>
                @*for buttons*@
            </th>
        </tr>
    </thead>
    
    <tbody>
        @foreach (var item in Model.ThesesList)
        {
        <tr>
            <td>
                    @Html.DisplayFor(modelItem => item.Thesis.Title)
            </td>
           
            <td>
                    @Html.DisplayFor(modelItem => item.Thesis.DefendDate)
            </td>
            <td>
                    @Html.DisplayFor(modelItem => item.Thesis.Grade)
            </td>
           
            <td>
                    @{
                        var status = item.Thesis.Status.ToString();
                     }   
                     @Localizer[status]      
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Teacher!.FullName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Student!.FullName)
            </td>
			@if (SignInManager.IsSignedIn(User))
            {
                @if (User.IsInRole("Admin"))
                {
                    <td>
                            <a class="btn thesisbtn m-1" asp-action="Edit" asp-route-id="@item.ThesisID">@Localizer["editBtn"]</a>
                            <a class="btn thesisbtn m-1" asp-action="Details" asp-route-id="@item.ThesisID">@Localizer["detailsBtn"]</a>
                            <a class="btn delbtn m-1" asp-action="Delete" asp-route-id="@item.ThesisID">@Localizer["deleteBtn"]</a>
                    </td>
                }

                @if (User.IsInRole("Teacher"))
                {
                    <td>
                            <a class="btn thesisbtn m-1" asp-action="Details" asp-route-id="@item.ThesisID">@Localizer["detailsBtn"]</a>
                    </td>
                }

                @if(User.IsInRole("Student"))
                {
                    <td>
                            <a class="btn thesisbtn m-1" asp-action="Details" asp-route-id="@item.ThesisID">@Localizer["detailsBtn"]</a>
                    </td>
                }

            }
        </tr>
        }
    </tbody>

</table>

<script>
    function sortTable(n) {
        var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
        table = document.getElementById("indexThesisTable");
        switching = true;
        
        dir = "asc";
        
        while (switching) {
        
            switching = false;
            rows = table.rows;
            
            for (i = 1; i < (rows.length - 1); i++) {
            
                shouldSwitch = false;
                
                x = rows[i].getElementsByTagName("TD")[n];
                y = rows[i + 1].getElementsByTagName("TD")[n];
                
                if (dir == "asc") {
                    if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                
                        shouldSwitch = true;
                        break;
                    }
                } else if (dir == "desc") {
                    if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                        
                        shouldSwitch = true;
                        break;
                    }
                }
            }
            if (shouldSwitch) {
                
                rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                switching = true;
                
                switchcount++;
            } else {
                
                if (switchcount == 0 && dir == "asc") {
                    dir = "desc";
                    switching = true;
                }
            }
        }
    }
</script>