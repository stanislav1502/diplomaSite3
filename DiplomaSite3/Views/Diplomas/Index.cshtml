
@using DiplomaSite3.Enums
@using Microsoft.AspNetCore.Identity;
@inject SignInManager<UserModel> SignInManager
@inject UserManager<UserModel> UserManager

@model AdminDiplomaVM

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<form asp-controller="Diplomas" asp-action="Index" method="get">
   <p> 
        <div>
            Title: <input type="text" asp-for="SearchString" />
            
        </div>
        <div>
            Only Posted
            <input type="checkbox" asp-for="OnlyPosted"/>
        </div>
        <div>
            <input type="submit" value="Filter" />
        </div> 
   </p>
</form>

<p>
    @if (User.IsInRole("Admin"))
    {
        <a asp-action="Create">Create New</a>
    }
</p>
<table class="table">
    
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Diplomas![0].Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Diplomas![0].Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Diplomas![0].DefendDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Diplomas![0].Grade)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Diplomas![0].Tags)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Diplomas![0].Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Diplomas![0].Teacher)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Diplomas![0].Student)
            </th>
            <th></th>
        </tr>
    </thead>
    
    <tbody>
        @foreach (var item in Model.Diplomas!)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DefendDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Grade)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Tags)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Teacher!.FullName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Student!.FullName)
            </td>
			@if (SignInManager.IsSignedIn(User))
            {
                @if (User.IsInRole("Admin"))
                {
                    <td>
                    <a asp-action="Edit" asp-route-id="@item.DiplomaID">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.DiplomaID">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.DiplomaID">Delete</a>
                    </td>
                }

                @if (User.IsInRole("Teacher"))
                {
                    <td>
                    <a asp-action="Edit" asp-route-id="@item.DiplomaID">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.DiplomaID">Details</a>
                    </td>
                }

                @if(User.IsInRole("Student"))
                {
                    <td>
                    <a asp-action="Details" asp-route-id="@item.DiplomaID">Details</a>
                    </td>
                }

            }
        </tr>
        }
    </tbody>

</table>
