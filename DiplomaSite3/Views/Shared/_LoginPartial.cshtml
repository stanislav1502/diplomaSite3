@using Microsoft.AspNetCore.Identity

@inject SignInManager<UserModel> SignInManager
@inject UserManager<UserModel> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
            <a id="manage" class="nav-link  btn navbtn mx-1" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">@Localizer["greeting"]: @UserManager.GetUserAsync(User).Result.FullName</a>
    </li>
    
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn navbtn mx-1">@Localizer["logout"]</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
            <a class="nav-link btn navbtn mx-1" id="register" asp-area="Identity" asp-page="/Account/Register">@Localizer["register"]</a>
    </li>
    
    <li class="nav-item">
            <a class="nav-link  btn navbtn mx-1" id="login" asp-area="Identity" asp-page="/Account/Login">@Localizer["login"]</a>
    </li>
}
</ul>
